[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v3
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v3
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 3)
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 3)
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v3, 4)
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v3, 4)
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewLatchStmt{var='cnt', expression=ReadHeap(v2)}
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewLatchStmt{var='cnt', expression=ReadHeap(v2)}
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Print(2)
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Print(2)
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v2))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v2))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Print(3)
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Print(3)
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
WriteHeap(v3, ReadHeap(v3) * 10)
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
WriteHeap(v3, ReadHeap(v3) * 10)
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
Print(ReadHeap(v3))
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
Print(ReadHeap(v3))
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 4
[EXE STACK]: 
Print(4)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 4
[EXE STACK]: 
Print(4)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 4
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
CountDownStmt{var='cnt'}
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
CountDownStmt{var='cnt'}
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(1)
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(1)
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
1
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
1
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
1
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v3
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v3
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 3)
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 3)
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v3, 4)
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v3, 4)
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewLatchStmt{var='cnt', expression=ReadHeap(v2)}
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewLatchStmt{var='cnt', expression=ReadHeap(v2)}
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Print(2)
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Print(2)
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v2))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v2))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Print(3)
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Print(3)
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
WriteHeap(v3, ReadHeap(v3) * 10)
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
WriteHeap(v3, ReadHeap(v3) * 10)
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
Print(ReadHeap(v3))
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
Print(ReadHeap(v3))
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 4
[EXE STACK]: 
Print(4)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 4
[EXE STACK]: 
Print(4)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 4
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
CountDownStmt{var='cnt'}
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
CountDownStmt{var='cnt'}
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(1)
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(1)
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
1
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
1
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
1
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 1)
(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 1)
(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 100
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 100
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 100
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 100
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
200
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
200
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
200
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v3
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v3
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 3)|(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 3)
(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 3)
(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v3, 4)|(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v3, 4)
(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v3, 4)
(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}
(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewBarrierStmt{var='cnt', expression=ReadHeap(v2)}
(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))|(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))
(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))))
(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))|(AwaitStmt{var='cnt'}|Print(ReadHeap(v3))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))
(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 2
[EXE STACK]: 
AwaitStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))))
(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 2
[EXE STACK]: 
AwaitStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [])

[PROCESS ID]: 1
[EXE STACK]: 
(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 1
[EXE STACK]: 
(AwaitStmt{var='cnt'}|Print(ReadHeap(v3)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|Print(ReadHeap(v1)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
Print(ReadHeap(v3))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
Print(ReadHeap(v1))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AwaitStmt{var='cnt'}
(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
Print(ReadHeap(v3))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
Print(ReadHeap(v1))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AwaitStmt{var='cnt'}
(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v3))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v3))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|Print(ReadHeap(v2)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
Print(ReadHeap(v2))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
Print(ReadHeap(v2))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v2))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 300
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v2))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 300
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
300
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 300
3 -> 4
[BARRIER STORAGE]:
1 -> (3, [2, 1, 3])

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(int x|(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(int x|(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(int x|(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int x|(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int x|(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int x
(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int x
(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))))
[SYMBOL TABLE]: 
x -> 0
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int q|(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))))
[SYMBOL TABLE]: 
x -> 0
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int q
(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))))
[SYMBOL TABLE]: 
x -> 0
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int q
(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))))
[SYMBOL TABLE]: 
x -> 0
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 20)|(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 20)
(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 20)
(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 30)|(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 30)
(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 30)
(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewLockStmt{var='x'}|(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewLockStmt{var='x'}
(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewLockStmt{var='x'}
(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))|(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))
(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))))
(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
(Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(NewLockStmt{var='q'}|(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
(Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))|(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
NewLockStmt{var='q'}
(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))
(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
NewLockStmt{var='q'}
(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
Fork((LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})))
(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'}))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))|(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'}))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
(LockStmt{var='x'}|(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'}))
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))
(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))))
(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 4
[EXE STACK]: 
(Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'})))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(NopStatement|(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) - 1)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 4
[EXE STACK]: 
(Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))|(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'})))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
NopStatement
(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) - 1)
UnlockStmt{var='x'}
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 4
[EXE STACK]: 
Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))
(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
NopStatement
(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) - 1)
UnlockStmt{var='x'}
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 4
[EXE STACK]: 
Fork((LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})))
(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
UnlockStmt{var='x'}
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 4
[EXE STACK]: 
(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 5
[EXE STACK]: 
(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(NopStatement|(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
LockStmt{var='x'}
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
UnlockStmt{var='x'}
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 4
[EXE STACK]: 
(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 5
[EXE STACK]: 
(LockStmt{var='q'}|(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 3
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
NopStatement
(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> -1

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> -1

[PROCESS ID]: 4
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> -1

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
NopStatement
(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> -1

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|UnlockStmt{var='x'})
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> -1

[PROCESS ID]: 4
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> -1

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
UnlockStmt{var='x'}
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 4
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 1
[EXE STACK]: 
(NopStatement|(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
UnlockStmt{var='x'}
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 4
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 19
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 1
[EXE STACK]: 
NopStatement
(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 2
[EXE STACK]: 
UnlockStmt{var='x'}
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 4
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 1
[EXE STACK]: 
NopStatement
(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 2
[EXE STACK]: 
UnlockStmt{var='x'}
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 4
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 30
[LOCK STORAGE]:
1 -> 2
2 -> 4

[PROCESS ID]: 1
[EXE STACK]: 
(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 4

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 4

[PROCESS ID]: 4
[EXE STACK]: 
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 4

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 4

[PROCESS ID]: 1
[EXE STACK]: 
(NopStatement|(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 4

[PROCESS ID]: 4
[EXE STACK]: 
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 4

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 4

[PROCESS ID]: 1
[EXE STACK]: 
NopStatement
(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 4
[EXE STACK]: 
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
NopStatement
(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 5
[EXE STACK]: 
LockStmt{var='q'}
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 5

[PROCESS ID]: 5
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 5

[PROCESS ID]: 1
[EXE STACK]: 
(LockStmt{var='x'}|(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 5

[PROCESS ID]: 5
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) + 5)|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 5

[PROCESS ID]: 1
[EXE STACK]: 
LockStmt{var='x'}
(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 5

[PROCESS ID]: 5
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) + 5)
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 5

[PROCESS ID]: 1
[EXE STACK]: 
LockStmt{var='x'}
(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 5

[PROCESS ID]: 5
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) + 5)
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 300
[LOCK STORAGE]:
1 -> -1
2 -> 5

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> 5

[PROCESS ID]: 5
[EXE STACK]: 
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> 5

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1))|(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> 5

[PROCESS ID]: 5
[EXE STACK]: 
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> 5

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1))
(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> -1

[PROCESS ID]: 5
[EXE STACK]: 
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1))
(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(UnlockStmt{var='x'}|(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'})))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
UnlockStmt{var='x'}
(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
UnlockStmt{var='x'}
(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> 1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(LockStmt{var='q'}|(Print(ReadHeap(v2))|UnlockStmt{var='q'}))
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
LockStmt{var='q'}
(Print(ReadHeap(v2))|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
LockStmt{var='q'}
(Print(ReadHeap(v2))|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v2))|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v2))|UnlockStmt{var='q'})
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v2))
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v2))
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
305
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
UnlockStmt{var='q'}
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
305
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)
[OUTPUT LIST]: 
190
305
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 190
2 -> 305
[LOCK STORAGE]:
1 -> -1
2 -> -1

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 1)|(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 1)
(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 1)
(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression=ReadHeap(v1)}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 1
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [1])

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 10
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 100
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 100
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 100
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 100
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
200
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
200
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [3])

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
10
9
200
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (1, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v2|(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v2
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v3|(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v3
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v3
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v2, 3)|(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 3)
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v2, 3)
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v3, 4)|(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v3, 4)
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v3, 4)
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(NewLatchStmt{var='cnt', expression=ReadHeap(v2)}|(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewLatchStmt{var='cnt', expression=ReadHeap(v2)}
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
NewLatchStmt{var='cnt', expression=ReadHeap(v2)}
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))|(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
Fork((WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))))
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
(AwaitStmt{var='cnt'}|(Print(100)|(CountDownStmt{var='cnt'}|Print(100))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 2
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 3

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Print(2)
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Print(2)
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
Fork((WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v2, ReadHeap(v2) * 10)|(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v2, ReadHeap(v2) * 10)
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 3
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v2))|(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v2))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v2))
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 3
[EXE STACK]: 
CountDownStmt{var='cnt'}
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 2

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Print(3)
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Print(3)
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
Fork((WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(WriteHeap(v3, ReadHeap(v3) * 10)|(Print(ReadHeap(v3))|CountDownStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
WriteHeap(v3, ReadHeap(v3) * 10)
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
WriteHeap(v3, ReadHeap(v3) * 10)
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 4
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
(Print(ReadHeap(v3))|CountDownStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
Print(ReadHeap(v3))
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
Print(ReadHeap(v3))
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 4
[EXE STACK]: 
CountDownStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 1

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 4
[EXE STACK]: 
Print(4)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
AwaitStmt{var='cnt'}
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 4
[EXE STACK]: 
Print(4)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 4
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(Print(100)|(CountDownStmt{var='cnt'}|Print(100)))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(CountDownStmt{var='cnt'}|Print(100))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
CountDownStmt{var='cnt'}
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
CountDownStmt{var='cnt'}
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(1)
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(1)
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
1
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
Print(100)
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
1
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
[OUTPUT LIST]: 
20
2
30
3
40
4
100
1
100
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
2 -> 30
3 -> 40
[LATCH STORAGE]:
1 -> 0

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Ref(int) v1|(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Ref(int) v1
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int cnt|(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int cnt
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(New(v1, 2)|(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
New(v1, 2)
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (0, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
CreateSemaphoreStmt{var='cnt', expression1=ReadHeap(v1), expression2=1}
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 0
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))|(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))|(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
Fork((AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))))
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
(AcquireStmt{var='cnt'}|(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 2
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 2
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [2])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
AcquireStmt{var='cnt'}
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
(Print(ReadHeap(v1) - 1)|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
Print(ReadHeap(v1) - 1)
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 3
[EXE STACK]: 
AcquireStmt{var='cnt'}
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [1])

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 10)|(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 10)
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 20
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(WriteHeap(v1, ReadHeap(v1) * 2)|(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'}))
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
WriteHeap(v1, ReadHeap(v1) * 2)
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 200
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
(Print(ReadHeap(v1))|ReleaseStmt{var='cnt'})
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
Print(ReadHeap(v1))
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
ReleaseStmt{var='cnt'}
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [3])

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
cnt -> 1
v1 -> (1, int)
[OUTPUT LIST]: 
20
19
400
[FILE TABLE]:
[HEAP STORAGE]:
1 -> 400
[SEMAPHORE TABLE STORAGE]:
1 -> (2, [])

